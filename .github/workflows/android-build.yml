name: Build APK

on:
  push:
    branches:
      - master  # 或者 master，根据你项目的主分支名称来选择
  pull_request:
    branches:
      - master  # 或者 master

jobs:
  build:
    runs-on: ubuntu-latest  # 使用 GitHub 提供的最新 Ubuntu 环境

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 设置 JDK 环境（默认 Android 项目需要 JDK 8 或更高版本）
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'

      # 安装 Android SDK
      - name: Install Android SDK
        run: |
          sudo apt update
          sudo apt install -y wget unzip
          # 安装 Android SDK
          wget https://dl.google.com/android/repository/commandlinetools-linux-6609375_latest.zip
          unzip commandlinetools-linux-6609375_latest.zip -d $HOME/android-sdk
          # 配置 SDK 路径
          echo "export ANDROID_HOME=$HOME/android-sdk" >> ~/.bashrc
          echo "export PATH=$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH" >> ~/.bashrc
          source ~/.bashrc
          # 安装 SDK 组件
          yes | sdkmanager --sdk_root=$ANDROID_HOME "platforms;android-30" "build-tools;30.0.3"
          yes | sdkmanager --sdk_root=$ANDROID_HOME "platform-tools"
      
      # 构建 APK 使用 Gradle
      - name: Build APK with Gradle
        run: ./gradlew assembleRelease  # 如果你想构建 Release 版本的 APK
        # 或者: run: ./gradlew assembleDebug  # 如果你想构建 Debug 版本的 APK

      # 上传构建好的 APK 到 GitHub Releases（可选）
      - name: Upload APK to GitHub Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: app/build/outputs/apk/release/app-release.apk  # APK 路径，基于你的项目结构
